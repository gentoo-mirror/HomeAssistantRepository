<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE pkgmetadata SYSTEM "http://www.gentoo.org/dtd/metadata.dtd">
<pkgmetadata>
  <maintainer type="project">
    <email>b@edevau.net</email>
    <name>Andreas Billmeier</name>
  </maintainer>
  <upstream>
    <remote-id type="pypi">home-assistant</remote-id>
    <remote-id type="github">home-assistant/core</remote-id>
    <doc>https://www.home-assistant.io/docs/</doc>
    <maintainer>
      <email>hello@home-assistant.io</email>
      <name>The Home Assistant Authors</name>
    </maintainer>
  </upstream>
  <use>
    <flag name="accuweather">Uses the AccuWeather web service as a source for weather data</flag>
    <flag name="airly">Uses the Airly web service as a source for air quality data</flag>
    <flag name="airvisual">Airvisual sensor platform queries the AirVisual cloud API for air quality data</flag>
    <flag name="alpha_vantage">The alpha_vantage sensor platform uses Alpha Vantage to monitor the stock market</flag>
    <flag name="androidtv">Library for controlling an Android TV, formerly firetv</flag>
    <flag name="android_ip_webcam">The android_ip_webcam integration turns any Android phone or tablet into a netwo</flag>
    <flag name="axis">Communicating with newer devices from Axis Communications</flag>
    <flag name="bluetooth">The Bluetooth integration will detect nearby Bluetooth devices</flag>
    <flag name="bluetooth_le_tracker">Tracks Bluetooth low-energy devices periodically based on interval_seconds value</flag>
    <flag name="caldav">Integrate a CalDAV (RFC4791) calendar in Home Assistant</flag>
    <flag name="camera">The camera integration allows you to use IP cameras with Home Assistant</flag>
    <flag name="cast">Let Home Assitant talk to Google Chromecast</flag>
    <flag name="cli">Set a dependency for Home Assistant Cli hass-cli (lots of modules required)</flag>
    <flag name="co2signal">Queries the CO2Signal API for the CO2 intensity of a specific region</flag>
    <flag name="compensation">Compensation integration consumes the state from other sensors</flag>
    <flag name="coronavirus">Add sensors for COVID-19 infections from Johns Hopkins University</flag>
    <flag name="darksky">Use dark sky weather data from Home Assistant</flag>
    <flag name="dlna_dmr">Allows you to control a DLNA Digital Media Renderer</flag>
    <flag name="dlna_dms">allows you to browse and play media from a DLNA Digital Media Server</flag>
    <flag name="dwd_weather_warnings">dwd_weather_warnings sensor platform uses DWD for  warnings</flag>
    <flag name="ecowitt">add Ecowitt Weather station to your Home Assistant</flag>
    <flag name="enigma2">Support for Enigma2 boxes with openwebif support</flag>
    <flag name="esphome">Support for esphome sensors, covers and switches and it's dashboard</flag>
    <flag name="ffmpeg">allows other Home Assistant integrations to process video and audio streams</flag>
    <flag name="file">Store notifications as a file</flag>
    <flag name="forecast_solar">Asynchronous Python client for getting forecast solar information</flag>
    <flag name="fronius">Add (very basic) Support for Fronius Symo JSON Api to Home Assistant</flag>
    <flag name="github">GitHub sensor integrates data from GitHub to monitor your favorite repositories</flag>
    <flag name="homekit">Integrate HomeKit controller and accessory in Home Assistant</flag>
    <flag name="homekit_controller">Allows you to connect accessories with the “Works with HomeKit” logo</flag>
    <flag name="http">Serves all files and data required for the Home Assistant frontend</flag>
    <flag name="hyperion">integrate your Hyperion into Home Assistant</flag>
    <flag name="influxdb">transfer sensor data to a local InfluxDB database</flag>
    <flag name="knx">Asynchronous Library for the KNX protocol</flag>
    <flag name="kodi">control a Kodi multimedia system</flag>
    <flag name="kraken">allows you to monitor exchange rates on kraken.com</flag>
    <flag name="local_calendar">create a calendar of events in Home Assistant</flag>
    <flag name="mariadb">WIP: set dependencies for mariadb-connector-python</flag>
    <flag name="maxcube">eQ-3 ELV MAX Cube Python API</flag>
    <flag name="mikrotik">add support for MikroTik RouterOS API</flag>
    <flag name="mobile_app">allows Home Assistant mobile apps to easily integrate with Home Assistant</flag>
    <flag name="modbus">sensors and switches controlled over MODBUS serial, TCP, and UDP connections</flag>
    <flag name="mosquitto">Set a runtime dependency for Mosquitto MQTT broker</flag>
    <flag name="mqtt">install MQTT Broker and dependencies</flag>
    <flag name="myq">lets you control MyQ-Enabled garage doors</flag>
    <flag name="mysensors">combines devices like Arduino, ESP8266, Raspberry Pi, NRF24L01+ and RFM69</flag>
    <flag name="mysql">set dependencies to install MySQL Libraries for use with HomeAssistant</flag>
    <flag name="notify_events">The Notify.Events service is a platform for the notify component</flag>
    <flag name="octoprint">The main integration to integrate OctoPrint sensors</flag>
    <flag name="onvif">allows you to use an ONVIF Profile S conformant device</flag>
    <flag name="otp">generates One-Time Passwords according to RFC6238</flag>
    <flag name="owntracks">OwnTracks: track your location and send it directly to Home Assistant</flag>
    <flag name="ping">use the great ICMPLib for Presence Detection and as a binary Sensor</flag>
    <flag name="plex">Python bindings for the Plex API</flag>
    <flag name="ps4">allows you to control a Sony PlayStation 4 console</flag>
    <flag name="python_script">write Python scripts that are exposed as services in Home Assistant</flag>
    <flag name="qnap">Python API for obtaining QNAP NAS system stats</flag>
    <flag name="qvr_pro">QVR Pro allows you to connect to cams configured on your QNAP NAS</flag>
    <flag name="radio_browser">use the directory of radio stations collected on Radio Browser in Home Assistant</flag>
    <flag name="recorder">storing details in a database per sqlalchemy</flag>
    <flag name="rest">rest sensor platform for data exposed by a RESTful API</flag>
    <flag name="ring">integrate your ring.com devices</flag>
    <flag name="samsungtv">Support for Samsung TV Sets</flag>
    <flag name="scrape">scraping information from websites</flag>
    <flag name="season">display astronomical or meteorological season (Spring, Summer, Autumn, Winter)</flag>
    <flag name="shelly">Shelly devices</flag>
    <flag name="signal_messenger">add Support for Moxie's Signal API</flag>
    <flag name="snmp">Presence Detection, Sensor, Switch via SNMP</flag>
    <flag name="socat">Set a flag to install socat and socat-zwave startscript</flag>
    <flag name="sonos">Sonos Media Player Support</flag>
    <flag name="speedtestdotnet">speedtest.net support</flag>
    <flag name="spotify">Spotify media player integration allows you to control Spotify playback</flag>
    <flag name="sql">enables you to use an SQL database supported by the sqlalchemy library</flag>
    <flag name="ssl">include support for haproxy</flag>
    <flag name="systemd">internal and developer use</flag>
    <flag name="systemmonitor">Allows you to monitor disk usage, memory usage, CPU usage, and running processes</flag>
    <flag name="tankerkoenig">monitor the fuel prices with tankerkoenig.de</flag>
    <flag name="tasmota">Python module to help parse and construct Tasmota MQTT messages</flag>
    <flag name="test">internal and developer use</flag>
    <flag name="tile">API for Tile Bluetooth trackers</flag>
    <flag name="tomorrowio">obtain weather, air quality, pollen, and fire information fro tomorrow.io</flag>
    <flag name="tplink">control your TP-Link Smart Home Devices</flag>
    <flag name="upnp">support UPnP/Internet Gateway Device (IGD) Protocol</flag>
    <flag name="utility_meter">integration provides functionality to track consumptions of various utilities</flag>
    <flag name="version">display the current Home Assistant versions</flag>
    <flag name="wake_on_lan">enables the ability to send magic packets to Wake on LAN capable devices</flag>
    <flag name="wemo">discover and control WeMo devices</flag>
    <flag name="whois">perform daily WHOIS lookups</flag>
    <flag name="workday">generating country, province and state specific sets of holidays on the fly</flag>
    <flag name="yamaha">Library for Yamaha RX-* Receivers</flag>
    <flag name="yamaha_musiccast">add support for Yamaha MusicCast devices</flag>
    <flag name="zeroconf">will scan the network for supported devices and services</flag>
    <flag name="zha">Support for ZHA/deconz based Zigbee/ZNet Devices</flag>
    <flag name="zwave_js">control a Z-Wave network via the Z-Wave JS driver</flag>
  </use>
</pkgmetadata>
